package com.example.submission2;

import android.app.AlertDialog;
import android.util.Log;
import android.widget.Toast;

import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;

import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.AsyncHttpResponseHandler;

import org.json.JSONArray;
import org.json.JSONObject;

import java.util.ArrayList;

import cz.msebera.android.httpclient.Header;

public class MainViewModel extends ViewModel {
        private static final String API_KEY = "1a4e408db944c1abbf6d35b368c2ee4f";
        private MutableLiveData<ArrayList<ItemData>> ldListItem = new MutableLiveData<>();

        void setItem(final String endpoints){
            AsyncHttpClient client = new AsyncHttpClient();
            final ArrayList<ItemData> items = new ArrayList<>();
            String url = "https://api.themoviedb.org/3/discover/" + endpoints + "?api_key="+ API_KEY +"&language=en-US";

            client.get(url, new AsyncHttpResponseHandler() {
                @Override
                public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
                    try {
                        String result = new String(responseBody);
                        JSONObject responseObject = new JSONObject(result);
                        JSONArray listResult = responseObject.getJSONArray("results");

                        for (int i = 0; i < 10; i++){
                            if (listResult != null){
                                JSONObject itemResult = listResult.getJSONObject(i);

                                ItemData item = new ItemData();
                                item.setId(itemResult.getInt("id"));
                                item.setScor(itemResult.getString("popularity"));
                                item.setTitle(itemResult.getString("original_title"));
                                item.setDataPublish(itemResult.getString("release_date"));
                                item.setProfile(itemResult.getString("poster_path"));

                                items.add(item);
                            }
                        }
                        ldListItem.postValue(items);
                    }catch (Exception e){
                        Log.d("exception", e.getMessage());
                        new AlertDialog.Builder(MainActivity.this)
                                .setMessage(e.getMessage())
                                .setCancelable(true)
                                .setTitle("Error")
                    }
                }

                @Override
                public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {
                    Log.d("exceptioin", error.getMessage());
                }
            });
        }

        LiveData<Arra